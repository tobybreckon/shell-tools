################################################################################

# A Makefile script for iterating through zipped assignments from DUO (blackboard)
# for software testing in a reset working evnvironment for each one
#
# use:
# - define working directory e.g. /tmp/marking-this-year
# - reset clean + setup build items below to work with your data locations
# - reset clean to work with location of this Makefile (last line!)

# Toby Breckon, Durham University, UK - January 2018

################################################################################

# define location where all the zip'd submissions are downloaded to
# (1 per student, already unzipped from the large multi-student zips from DUO)

PATH_TO_MARK=/tmp/marking-2018-19/l3-comp-vis-2018-marking/to_mark/

# define location where all the zip'd submissions are moved to when marked

PATH_MARKED=/tmp/marking-2018-19/l3-comp-vis-2018-marking/marked/

# define a working directory

PATH_WORKING=/tmp/marking-2018-19/working

# define datasets needed for testing

# DATASETS_REQUIRED=/tmp/OH-sfm-test-sequence-DURHAM-2015-03-27-calibrated \
#									/tmp/OH-sfm-test-sequence-DURHAM-2015-03-27-uncalibrated \
#									/tmp/l4-test-cal /tmp/l4-test-uncal

DATASETS_REQUIRED=/tmp/TTBB-durham-02-10-17-sub10 /tmp/l3-test

################################################################################

# reset the working environment

# explicity change dir, for safety
# data to be available for software testing
# location of this Makefile

clean:

	cd $(PATH_WORKING)

	rm -rf * .[a-zA-Z]*

	@ ln -s $(DATASETS_REQUIRED) .

	@ ln -s ~/mobile/shell-tools/Makefile.marking Makefile

################################################################################

# protect against code than may rewrite the input files + create dirs

setup:
	@ chmod -R -w $(DATASETS_REQUIRED)
	@ mkdir -p $(PATH_TO_MARK) $(PATH_MARKED)


################################################################################

# how much more to do!

todo:	left

left:
	@ echo -n "Currently there are "
	@ (ls -l $(PATH_TO_MARK)/*txt | wc -l | tr -d "\n") 2>/dev/null
	@ echo " assignments left to mark! (including current one)"

################################################################################

# get next one to mark to "to mark" set

next:
	@ echo Next from: $(PATH_TO_MARK)
	@ echo File: `ls $(PATH_TO_MARK) | grep zip | head -1`
	unzip $(PATH_TO_MARK)/"`ls $(PATH_TO_MARK) | grep zip | head -1`"
	@ echo `ls $(PATH_TO_MARK) | grep txt | head -1 | cut -d"_" -f2` > .current_id

# also handle people who fail to grasp the concept of zip

nextnozip:
	@ echo Next from: $(PATH_TO_MARK)
	@ echo File set with submission: `ls $(PATH_TO_MARK) | grep txt | head -1`
	cp -r $(PATH_TO_MARK)/*`ls $(PATH_TO_MARK) | grep txt | head -1 | cut -d"_" -f2`* .

################################################################################

# print ID of current student being marked in working directory

student: current
id: current

current:
	@ cd $(PATH_WORKING)
	@ echo -n "Current student being marked is: "
	@ (test -e .current_id && cat .current_id) || echo "<NONE IN WORKING DIRECTORY>"

################################################################################

# move this one to the "marked" set

marked:
	@ echo Moving last marked from: $(PATH_TO_MARK) to $(PATH_MARKED)
	@ echo
	@ mv -v $(PATH_TO_MARK)/*`ls $(PATH_TO_MARK) | grep zip | head -1 | cut -d"_" -f2`* $(PATH_MARKED)
	@ echo

# also handle people who fail to grasp the concept of zip

markednozip:
	@ echo Moving last marked from: $(PATH_TO_MARK) to $(PATH_MARKED)
	@ echo
	@ mv -v $(PATH_TO_MARK)/*`ls $(PATH_TO_MARK) | grep txt | head -1 | cut -d"_" -f2`* $(PATH_MARKED)
	@ echo

################################################################################
